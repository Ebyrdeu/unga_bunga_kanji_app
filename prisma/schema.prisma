datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  role          String      @default("peasant")
  curentlevel   Int         @default(1)
  accounts      Account[]
  sessions      Session[]
  userKanji     UserKnaji[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Kanji {
  kanji          String   @id
  kanji_level    Int
  kanji_meanings String[]
  kun_readings   String[]
  on_readings    String[]
}

model UserKnaji {
  kanjiId         String   @id
  kanji           String
  kanji_level     Int
  kanji_meanings  String[]
  kun_readings    String[]
  on_readings     String[]
  total_answers   Int      @default(0)
  correct_answers Int      @default(0)
  lesson_status   Boolean  @default(true)
  User            User?    @relation(fields: [userId], references: [id])
  userId          String?
}
